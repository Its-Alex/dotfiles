{{ if eq .chezmoi.osRelease.id "arch" -}}
#!/usr/bin/env bash
set -euo pipefail

# Enable pacman color
sudo sed -i '/^#Color/c\Color' /etc/pacman.conf

printf "\e[1;34m%s\e[1;0m\n" "Install Git..."
sudo pacman -S --noconfirm --needed git base-devel

if ! command -v yay > /dev/null; then
    printf "\e[1;34m%s\e[1;0m\n" "Install Yay..."
    git clone https://aur.archlinux.org/yay.git /tmp/yay
    (
        cd /tmp/yay || exit 1
        makepkg -si --noconfirm --needed
    )
    rm -rf /tmp/yay
fi

printf "\e[1;34m%s\e[1;0m\n" "Install system programs.."
packages_list=(
    # System
    flatpak
    unzip
    tar
    fzf
    jq
    os-prober
    fwupd
    systemd-resolvconf
    ## Keyboard
    xkb-qwerty-fr
    ## Fonts
    ttf-fira-code
    ttf-firacode-nerd
    ## Theme
    numix-square-icon-theme # Gnome icons
    flat-remix-gnome # Gnome theme
    numix-frost-themes # Legacy app
    # IDE
    vim
    nvim
    # Terminal
    alacritty
    tmux
    tmuxinator
    zsh
    # Dev
    ## IDE
    visual-studio-code-bin
    ## VPN
    networkmanager-openconnect
    ## Docker
    docker
    docker-compose
    ## Qemu
    qemu-full
    guestfs-tools
    linux-headers
    ## Vagrant
    vagrant
)
yay -S --noconfirm --needed "${packages_list[@]}"

printf "\e[1;34m%s\e[1;0m\n" "Setup docker"
sudo usermod -aG docker "${USER}"
sudo systemctl enable docker

flatpak_flathub_apps_list=(
    io.gitlab.librewolf-community
    org.signal.Signal
    com.slack.Slack
    com.discordapp.Discord
    md.obsidian.Obsidian
    org.videolan.VLC
    com.mattjakeman.ExtensionManager # Gnome extension manager
    com.obsproject.Studio
)
printf "\e[1;34m%s\e[1;0m\n" "Install flatpak programs.."
flatpak remote-add --if-not-exists --user flathub https://dl.flathub.org/repo/flathub.flatpakrepo
flatpak -y install --user flathub "${flatpak_flathub_apps_list[@]}"

printf "\e[1;34m%s\e[1;0m\n" "Setup flatpak programs.."
# Allow Librewolf to access all devices (e.g. webcam)
flatpak override --user --device=all io.gitlab.librewolf-community

printf "\e[1;34m%s\e[1;0m\n" "Disable Xbox Wireless Adapter for Windows"
# Device Xbox Wireless Adapter for Windows was always appearing as Wifi Key
echo 'ACTION=="add", ATTR{idVendor}=="045e", ATTR{idProduct}=="02fe", ATTR{authorized}="0"' | sudo tee "/etc/udev/rules.d/99-disable-xbox-adapter.rules" > /dev/null
# Reload udev rules
sudo udevadm control --reload-rules
sudo udevadm trigger

{{ if eq .chezmoi.hostname "xxii-arch-laptop" -}}
# Install and configure thermald
printf "\e[1;34m%s\e[1;0m\n" "Install thermald"
yay -S --noconfirm --needed thermald
sudo systemctl enable --now thermald
{{ end -}}

# Setup systemd-resolved with NetworkManager
sudo systemctl enable --now systemd-resolved.service
sudo ln -sf ../run/systemd/resolve/stub-resolv.conf /etc/resolv.conf
{{ end -}}
